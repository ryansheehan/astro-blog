---
import {Image} from 'astro:assets';
import BaseLayout from '@layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '@components/FormattedDate.astro';

const endOfDay = new Date();
endOfDay.setHours(23, 59, 59, 999);

const posts = (await getCollection('blog'))
.filter((post) => import.meta.env.DEV || (post.data.pubDate && post.data.pubDate <= endOfDay))
.map((post) => {
	if(!post.data.pubDate) {
		const {data, ...rest} = post;
		const {pubDate, ...restData} = data;
		const newData = {...restData, pubDate: new Date()};
		return {data: newData, ...rest};
	}
	return {...post};
})
.sort(
	(a, b) => b.data.pubDate!.valueOf() - a.data.pubDate!.valueOf()
);

---

<BaseLayout>
	<section class="content-grid">
		<ul class="full-width">
			{
				posts.map((post) => (
					<li>
						<a href={`/blog/${post.slug}/`}>
							{post.data.heroImage && <Image width={720} height={360} src={post.data.heroImage} alt="" class:list={["image"]} />}
							<h2 class="title">{post.data.title}</h2>
							<p class="date"><FormattedDate date={post.data.pubDate!} /></p>
						</a>
					</li>
				))
			}
		</ul>
	</section>
</BaseLayout>

<style>
	ul, li {
		padding: 0;
	}

	a {
		padding: 0;
		margin: 0;
	}

	ul {
		margin-top: var(--size-5);
		display: grid;
		grid-template-columns: subgrid;
		row-gap: var(--size-7);
	}

	li {
		display: grid;
		grid-template-columns: subgrid;		
	}

	.image {
		max-block-size: var(--size-13);
		object-fit: cover;
		width: 100%;
	}

	h2.title {
		font-size: var(--font-size-fluid-2);
		margin-block: var(--size-2) 0;		
		/* max-inline-size: var(--size-header-1); */
	}

	p.date {
		font-size: var(--font-size-fluid-0);
		color: var(--text-2);
	}
</style>